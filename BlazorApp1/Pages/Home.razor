@page "/"
@inject NavigationManager NavManager
@inject IJSRuntime JS

<a href="#" onclick="window.parent.location.reload()">🎮 HC 게임 모음집</a>




<div class="scroll-wrapper">
    <div class="scroll-container">
        @foreach (var game in games)
        {
            <div class="game-card">
                <img src="@game.ImageUrl" alt="@game.Name" class="game-image" />
                <div class="game-name">@game.Name</div>
                <button class="game-button" @onclick="() => StartGame(game.Url)">▶ 시작</button>
            </div>
        }
    </div>
</div>



@if (!string.IsNullOrEmpty(selectedGame))
{
    <h2 class="running-title">📌 게임 실행 중</h2>
    <iframe src="@selectedGame"
        style="border: none; width: 90vw; height: 90vw; max-width: 800px; max-height: 800px; display: block; margin: 0 auto;">
</iframe>



}

@code {
    private List<Game> games = new();
    private string? selectedGame;
	private ElementReference sliderRef;

    protected override void OnInitialized()
    {
        var baseUri = NavManager.BaseUri.TrimEnd('/');
        games = new()
        {
            new Game { Name = "숫자 맞추기 게임", Url = $"{baseUri}/guessgame", ImageUrl = "images/number.jpg" },
            new Game { Name = "테트리스", Url = $"{baseUri}/tetris", ImageUrl = "images/tetris.jpg" },
            new Game { Name = "지렁이 게임", Url = $"{baseUri}/snake", ImageUrl = "images/snake.jpg" },
            new Game { Name = "똥 피하기 게임", Url = $"{baseUri}/poop", ImageUrl = "images/poop.jpg" }
            
        };
    }
    async Task ScrollLeft()
    {
        await JS.InvokeVoidAsync("scrollSlider", sliderRef, -300);
    }

    async Task ScrollRight()
    {
        await JS.InvokeVoidAsync("scrollSlider", sliderRef, 300);
    }

    void StartGame(string url)
    {
        selectedGame = url;
    }

    class Game
    {
        public string Name { get; set; } = "";
        public string Url { get; set; } = "";
        public string ImageUrl { get; set; } = "";
    }
    
}
